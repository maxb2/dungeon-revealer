name: Discord release update

on:
  release:
    types: [published]

jobs:
  job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Set environment: release"
        if: ${{ ! github.event.release.prerelease }} # Only prereleases
        run: |
          BODY=''
          while IFS= read -r line
          do
             BODY=$BODY"> $line"$'\n'
          done < <(printf '%s\n' "${{ github.event.release.body }}")
          DESC="@everyone [${{ github.event.repository.name }}@${{ github.event.release.tag_name }}](${{ github.event.release.html_url }}) release has been deployed!"$'\n'"$BODY"
          echo "::set-env name=DISCORD_EMBEDS::$(jq -nc --arg title "${{ github.event.release.name }} release" --arg url "${{ github.event.release.html_url }}" --arg color "26880" --arg desc "$DESC" '[{"title": $title, "url": $url, "color": $color, "description": $desc}]')"

      - name: "Set environment: prerelease"
        if: ${{ github.event.release.prerelease }} # Only prereleases
        run: |
          BODY=''
          while IFS= read -r line
          do
             BODY=$BODY"> $line"$'\n'
          done < <(printf '%s\n' "${{ github.event.release.body }}")
          DESC="@everyone [${{ github.event.repository.name }}@${{ github.event.release.tag_name }}](${{ github.event.release.html_url }}) prerelease has been deployed! Help us test before the release is finalized. Join the discussion in #feedback"$'\n'"$BODY"
          echo "::set-env name=DISCORD_EMBEDS::$(jq -nc --arg title "${{ github.event.release.name }} prerelease" --arg url "${{ github.event.release.html_url }}" --arg color "26880" --arg desc "$DESC" '[{"title": $title, "url": $url, "color": $color, "description": $desc}]')"

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_RELEASES }}
        uses: Ilshidur/action-discord@0.3.0
